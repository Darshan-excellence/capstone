#ifndef CAPSTONE_68K_H
#define CAPSTONE_68K_H

/* Capstone Disassembly Engine */
/* By Nguyen Anh Quynh <aquynh@gmail.com>, 2014 */

#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>
#include "platform.h"

#ifdef _MSC_VER
#pragma warning(disable:4201)
#endif
	
//> M68K registers
typedef enum m68k_reg {
	M68K_REG_INVALID = 0,

	M68K_REG_D0,
	M68K_REG_D1,
	M68K_REG_D2,
	M68K_REG_D3,
	M68K_REG_D4,
	M68K_REG_D5,
	M68K_REG_D6,
	M68K_REG_D7,

	M68K_REG_A0,
	M68K_REG_A1,
	M68K_REG_A2,
	M68K_REG_A3,
	M68K_REG_A4,
	M68K_REG_A5,
	M68K_REG_A6,
	M68K_REG_A7,

	M68K_REG_SR,
	M68K_REG_PC,

	M68K_REG_ENDING,   // <-- mark the end of the list of registers
} m68k_reg;


//> M68K Addressing Modes
typedef enum m68k_adress_mode {
	M68K_RD_DATA,				// Register Direct - Data
	M68K_RD_ADDRESS,			// Register Direct - Address

	M68K_RI_ADDRESS,			// Register Indirect - Address
	M68K_RI_ADDRESS_PI,			// Register Indirect - Address with Postincrement
	M68K_RI_ADDRESS_PD,			// Register Indirect - Address with Predecrement
	M68K_RI_ADDRESS_D,			// Register Indirect - Address with Displacement

	M68K_ARIWI_8_BIT,			// Address Register Indirect With Index- 8-bit displacement
	M68K_ARIWI_BASE,			// Address Register Indirect With Index- Base displacement

	M68K_MI_PI,					// Memory indirect - Postindex
	M68K_MI_PE,					// Memory indirect - Preindex

	M68K_PCI_DISP,				// Program Counter Indirect - with Displacement

	M68K_PCIIWI_8_BIT,			// Program Counter Indirect with Index - with 8-Bit Displacement
	M68K_PCIIWI_BASE,			// Program Counter Indirect with Index - with Base Displacement

	M68K_PCMI_PI,				// Program Counter Memory Indirect - Postindexed
	M68K_PCMI_PE,				// Program Counter Memory Indirect - Preindexed

	M68K_ADA_SHORT,				// Absolute Data Addressing  - Short
	M68K_ADA_LONG,				// Absolute Data Addressing  - Long
	M68K_IMMIDATE,				// Immidate value

} m68k_adress_mode; 

//> Operand type for instruction's operands

typedef enum m68k_op_type {
	M68K_OP_INVALID = 0, // = CS_OP_INVALID (Uninitialized).
	M68K_OP_REG, // = CS_OP_REG (Register operand).
	M68K_OP_IMM, // = CS_OP_IMM (Immediate operand).
	M68K_OP_MEM, // = CS_OP_MEM (Memory operand).
} m68k_op_type;

// Instruction's operand referring to memory
// This is associated with M68K_OP_MEM operand type above

typedef struct m68k_op_mem {
	m68k_reg base_reg; // base register (or M68K_REG_INVALID if irrelevant)
	m68k_reg index_reg; // index register (or M68K_REG_INVALID if irrelevant)
	m68k_reg in_base_reg; // indirect base register (or M68K_REG_INVALID if irrelevant)
	uint32_t in_disp; // indirect displacement 
	uint32_t out_disp; // outher displacement 
	uint8_t scale;	// scale for index register
	uint16_t disp;	// displacement value
	uint8_t  width;	// used for bf* instructions 
	uint8_t offset;	// used for bf* instructions
	uint8_t index_size; // 0 = w, 1 = l
} m68k_op_mem;

// Instruction operand
typedef struct cs_m68k_op {
	m68k_adress_mode address_mode;	// addressing mode for
	union {
		uint64_t imm;		// immediate value for IMM operand
		double fimm;
		m68k_reg reg;	// register value for REG operand
		m68k_op_mem mem;
	};
} cs_m68k_op;

typedef struct cs_m68k
{
	// Number of operands of this instruction, 
	// or 0 when instruction has no operand.
	cs_m68k_op operands[4]; // operands for this instruction.
	uint8_t op_count;
	uint8_t op_size;	// size of data operand works on in bytes (.b, .w, .l, etc)
} cs_m68k;

//> M68K instruction
typedef enum m68k_insn {
	M68K_INSN_INVALID = 0,
	M68K_INSN_ABCD,
	M68K_INSN_ADD,
	M68K_INSN_ADDA,
	M68K_INSN_ADDI,
	M68K_INSN_ADDQ,
	M68K_INSN_ADDX,
	M68K_INSN_AND,
	M68K_INSN_ANDI,
	M68K_INSN_ASL,
	M68K_INSN_ASR,
	M68K_INSN_BHS,
	M68K_INSN_BLO,
	M68K_INSN_BHI,
	M68K_INSN_BLS,
	M68K_INSN_BCC,
	M68K_INSN_BCS,
	M68K_INSN_BNE,
	M68K_INSN_BEQ,
	M68K_INSN_BVC,
	M68K_INSN_BVS,
	M68K_INSN_BPL,
	M68K_INSN_BMI,
	M68K_INSN_BGE,
	M68K_INSN_BLT,
	M68K_INSN_BGT,
	M68K_INSN_BLE,
	M68K_INSN_BRA,
	M68K_INSN_BSR,
	M68K_INSN_BCHG,
	M68K_INSN_BCLR,
	M68K_INSN_BSET,
	M68K_INSN_BTST,
	M68K_INSN_BFCHG,
	M68K_INSN_BFCLR,
	M68K_INSN_BFEXTS,
	M68K_INSN_BFEXTU,
	M68K_INSN_BFFFO,
	M68K_INSN_BFINS,
	M68K_INSN_BFSET,
	M68K_INSN_BFTST,
	M68K_INSN_BKPT,
	M68K_INSN_CAS,
	M68K_INSN_CAS2,
	M68K_INSN_CHK,
	M68K_INSN_CHK2,
	M68K_INSN_CLR,
	M68K_INSN_CMP,
	M68K_INSN_CMPA,
	M68K_INSN_CMPI,
	M68K_INSN_CMPM,
	M68K_INSN_CMP2,
	M68K_INSN_CINVL,
	M68K_INSN_CINVP,
	M68K_INSN_CINVA,
	M68K_INSN_CPUSHL,
	M68K_INSN_CPUSHP,
	M68K_INSN_CPUSHA,
	M68K_INSN_DIVS,
	M68K_INSN_DIVSL,
	M68K_INSN_DIVU,
	M68K_INSN_DIVUL,
	M68K_INSN_EOR,
	M68K_INSN_EORI,
	M68K_INSN_EXG,
	M68K_INSN_EXT,
	M68K_INSN_EXTB,
	M68K_INSN_FABS,
	M68K_INSN_FSABS,
	M68K_INSN_FDABS,
	M68K_INSN_FACOS,
	M68K_INSN_FADD,
	M68K_INSN_FSADD,
	M68K_INSN_FDADD,
	M68K_INSN_FASIN,
	M68K_INSN_FATAN,
	M68K_INSN_FATANH,
	M68K_INSN_FBF,
	M68K_INSN_FBEQ,
	M68K_INSN_FBOGT,
	M68K_INSN_FBOGE,
	M68K_INSN_FBOLT,
	M68K_INSN_FBOLE,
	M68K_INSN_FBOGL,
	M68K_INSN_FBOR,
	M68K_INSN_FBUN,
	M68K_INSN_FBUEQ,
	M68K_INSN_FBUGT,
	M68K_INSN_FBUGE,
	M68K_INSN_FBULT,
	M68K_INSN_FBULE,
	M68K_INSN_FBNE,
	M68K_INSN_FBT,
	M68K_INSN_FBSF,
	M68K_INSN_FBSEQ,
	M68K_INSN_FBGT,
	M68K_INSN_FBGE,
	M68K_INSN_FBLT,
	M68K_INSN_FBLE,
	M68K_INSN_FBGL,
	M68K_INSN_FBGLE,
	M68K_INSN_FBNGLE,
	M68K_INSN_FBNGL,
	M68K_INSN_FBNLE,
	M68K_INSN_FBNLT,
	M68K_INSN_FBNGE,
	M68K_INSN_FBNGT,
	M68K_INSN_FBSNE,
	M68K_INSN_FBST,
	M68K_INSN_FCMP,
	M68K_INSN_FCOS,
	M68K_INSN_FCOSH,
	M68K_INSN_FDBF,
	M68K_INSN_FDBEQ,
	M68K_INSN_FDBOGT,
	M68K_INSN_FDBOGE,
	M68K_INSN_FDBOLT,
	M68K_INSN_FDBOLE,
	M68K_INSN_FDBOGL,
	M68K_INSN_FDBOR,
	M68K_INSN_FDBUN,
	M68K_INSN_FDBUEQ,
	M68K_INSN_FDBUGT,
	M68K_INSN_FDBUGE,
	M68K_INSN_FDBULT,
	M68K_INSN_FDBULE,
	M68K_INSN_FDBNE,
	M68K_INSN_FDBT,
	M68K_INSN_FDBSF,
	M68K_INSN_FDBSEQ,
	M68K_INSN_FDBGT,
	M68K_INSN_FDBGE,
	M68K_INSN_FDBLT,
	M68K_INSN_FDBLE,
	M68K_INSN_FDBGL,
	M68K_INSN_FDBGLE,
	M68K_INSN_FDBNGLE,
	M68K_INSN_FDBNGL,
	M68K_INSN_FDBNLE,
	M68K_INSN_FDBNLT,
	M68K_INSN_FDBNGE,
	M68K_INSN_FDBNGT,
	M68K_INSN_FDBSNE,
	M68K_INSN_FDBST,
	M68K_INSN_FDIV,
	M68K_INSN_FSDIV,
	M68K_INSN_FDDIV,
	M68K_INSN_FETOX,
	M68K_INSN_FETOXM1,
	M68K_INSN_FGETEXP,
	M68K_INSN_FGETMAN,
	M68K_INSN_FINT,
	M68K_INSN_FINTRZ,
	M68K_INSN_FLOG10,
	M68K_INSN_FLOG2,
	M68K_INSN_FLOGN,
	M68K_INSN_FLOGNP1,
	M68K_INSN_FMOD,
	M68K_INSN_FMOVE,
	M68K_INSN_FSMOVE,
	M68K_INSN_FDMOVE,
	M68K_INSN_FMOVECR,
	M68K_INSN_FMOVEM,
	M68K_INSN_FMUL,
	M68K_INSN_FSMUL,
	M68K_INSN_FDMUL,
	M68K_INSN_FNEG,
	M68K_INSN_FSNEG,
	M68K_INSN_FDNEG,
	M68K_INSN_FNOP,
	M68K_INSN_FREM,
	M68K_INSN_FSCALE,
	M68K_INSN_FSGLDIV,
	M68K_INSN_FSGLMUL,
	M68K_INSN_FSIN,
	M68K_INSN_FSINCOS,
	M68K_INSN_FSINH,
	M68K_INSN_FSQRT,
	M68K_INSN_FSSQRT,
	M68K_INSN_FDSQRT,
	M68K_INSN_FSUB,
	M68K_INSN_FSSUB,
	M68K_INSN_FDSUB,
	M68K_INSN_FTAN,
	M68K_INSN_FTANH,
	M68K_INSN_FTENTOX,
	M68K_INSN_FTRAPF,
	M68K_INSN_FTRAPEQ,
	M68K_INSN_FTRAPOGT,
	M68K_INSN_FTRAPOGE,
	M68K_INSN_FTRAPOLT,
	M68K_INSN_FTRAPOLE,
	M68K_INSN_FTRAPOGL,
	M68K_INSN_FTRAPOR,
	M68K_INSN_FTRAPUN,
	M68K_INSN_FTRAPUEQ,
	M68K_INSN_FTRAPUGT,
	M68K_INSN_FTRAPUGE,
	M68K_INSN_FTRAPULT,
	M68K_INSN_FTRAPULE,
	M68K_INSN_FTRAPNE,
	M68K_INSN_FTRAPT,
	M68K_INSN_FTRAPSF,
	M68K_INSN_FTRAPSEQ,
	M68K_INSN_FTRAPGT,
	M68K_INSN_FTRAPGE,
	M68K_INSN_FTRAPLT,
	M68K_INSN_FTRAPLE,
	M68K_INSN_FTRAPGL,
	M68K_INSN_FTRAPGLE,
	M68K_INSN_FTRAPNGLE,
	M68K_INSN_FTRAPNGL,
	M68K_INSN_FTRAPNLE,
	M68K_INSN_FTRAPNLT,
	M68K_INSN_FTRAPNGE,
	M68K_INSN_FTRAPNGT,
	M68K_INSN_FTRAPSNE,
	M68K_INSN_FTRAPST,
	M68K_INSN_FTST,
	M68K_INSN_FTWOTOX,
	M68K_INSN_HALT,
	M68K_INSN_ILLEGAL,
	M68K_INSN_JMP,
	M68K_INSN_JSR,
	M68K_INSN_LEA,
	M68K_INSN_LINK,
	M68K_INSN_LPSTOP,
	M68K_INSN_LSL,
	M68K_INSN_LSR,
	M68K_INSN_MOVE,
	M68K_INSN_MOVEA,
	M68K_INSN_MOVEC,
	M68K_INSN_MOVEM,
	M68K_INSN_MOVEP,
	M68K_INSN_MOVEQ,
	M68K_INSN_MOVES,
	M68K_INSN_MOVE16,
	M68K_INSN_MULS,
	M68K_INSN_MULU,
	M68K_INSN_NBCD,
	M68K_INSN_NEG,
	M68K_INSN_NEGX,
	M68K_INSN_NOP,
	M68K_INSN_NOT,
	M68K_INSN_OR,
	M68K_INSN_ORI,
	M68K_INSN_PACK,
	M68K_INSN_PEA,
	M68K_INSN_PFLUSH,
	M68K_INSN_PFLUSHA,
	M68K_INSN_PFLUSHAN,
	M68K_INSN_PFLUSHN,
	M68K_INSN_PLOADR,
	M68K_INSN_PLOADW,
	M68K_INSN_PLPAR,
	M68K_INSN_PLPAW,
	M68K_INSN_PMOVE,
	M68K_INSN_PMOVEFD,
	M68K_INSN_PTESTR,
	M68K_INSN_PTESTW,
	M68K_INSN_PULSE,
	M68K_INSN_REMS,
	M68K_INSN_REMU,
	M68K_INSN_RESET,
	M68K_INSN_ROL,
	M68K_INSN_ROR,
	M68K_INSN_ROXL,
	M68K_INSN_ROXR,
	M68K_INSN_RTD,
	M68K_INSN_RTE,
	M68K_INSN_RTM,
	M68K_INSN_RTR,
	M68K_INSN_RTS,
	M68K_INSN_SBCD,
	M68K_INSN_ST,
	M68K_INSN_SF,
	M68K_INSN_SHI,
	M68K_INSN_SLS,
	M68K_INSN_SCC,
	M68K_INSN_SHS,
	M68K_INSN_SCS,
	M68K_INSN_SLO,
	M68K_INSN_SNE,
	M68K_INSN_SEQ,
	M68K_INSN_SVC,
	M68K_INSN_SVS,
	M68K_INSN_SPL,
	M68K_INSN_SMI,
	M68K_INSN_SGE,
	M68K_INSN_SLT,
	M68K_INSN_SGT,
	M68K_INSN_SLE,
	M68K_INSN_STOP,
	M68K_INSN_SUB,
	M68K_INSN_SUBA,
	M68K_INSN_SUBI,
	M68K_INSN_SUBQ,
	M68K_INSN_SUBX,
	M68K_INSN_SWAP,
	M68K_INSN_TAS,
	M68K_INSN_TRAP,
	M68K_INSN_TRAPV,
	M68K_INSN_TRAPT,
	M68K_INSN_TRAPF,
	M68K_INSN_TRAPHI,
	M68K_INSN_TRAPLS,
	M68K_INSN_TRAPCC,
	M68K_INSN_TRAPHS,
	M68K_INSN_TRAPCS,
	M68K_INSN_TRAPLO,
	M68K_INSN_TRAPNE,
	M68K_INSN_TRAPEQ,
	M68K_INSN_TRAPVC,
	M68K_INSN_TRAPVS,
	M68K_INSN_TRAPPL,
	M68K_INSN_TRAPMI,
	M68K_INSN_TRAPGE,
	M68K_INSN_TRAPLT,
	M68K_INSN_TRAPGT,
	M68K_INSN_TRAPLE,
	M68K_INSN_TST,
	M68K_INSN_UNLK,
	M68K_INSN_UNPK,

} m68k_insn;

#ifdef __cplusplus
}
#endif

#endif

